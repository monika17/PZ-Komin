<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><link href="description_data/397799179d2a2b15a0214120f0263de2-0eb943d991035a1dc519c256e2c.css" rel="Stylesheet" type="text/css">
        <title>Webcam Capture</title>        
        <meta name="description" content="For a long time, I have been looking for a good way to capture images without too much trouble. All you need to do is call one method to get the image.I have used Windows Image Acquisition (WIA) to capture images. WIA provides a great deal of compatibility with webcams already ru">
                
        <script src="description_data/jquery-1.js" type="text/javascript"></script>
        <script src="description_data/5bbbc6f5c6e8eaaa86e7461271236f60-57b949d089ce3e1f63e667a8b390.js" type="text/javascript"></script>                        <script type="text/javascript">
            function initializePage() {
                var activeTabData = 'activeTab';
                var otherTabClass = 'otherTab';
                var hiddenPreClass = 'hidden';
                $("a[href^=#]").attr("target","_self");
                $("div.scriptcode").each(function (i) {
                    var scriptBlock = $(this);
                    scriptBlock.trackCopy(trackCodeSnippetCodeDownload);
                    var labelElems = scriptBlock.find("div.title > span");
                    if (labelElems.length == 0) {
                        labelElems = scriptBlock.find("div.title");
                    }
                    var languageSpans = scriptBlock.find("span.hidden");
                    var pres = scriptBlock.find("pre");
                    if (languageSpans.length > 0 && pres.length > 1) {
                        labelElems.each(function(index, elem) {
                            var codePre = $(pres[index]);
                            var labelSpan = $(elem);
                            var languageSpan = $(languageSpans[index]);
                            labelSpan.data('code', codePre.text().replace(/(\r(\n)?)|((\r)?\n)/ig, '\r\n'));
                            codePre.removeClass(hiddenPreClass);  
                            codePre.addClass(languageSpan.text().replace(/^\s+|\s+$/g,""));
                            codePre.chili();
                            languageSpan.remove();
                        });

                        pres = scriptBlock.find("pre");
                        labelElems.each(function(index, elem) {
                            var codePre = $(pres[index]);
                            var labelSpan = $(elem);
                            if (index == 0) {
                                scriptBlock.data(activeTabData, 0);
                            }
                            else {
                                labelSpan.addClass(otherTabClass);
                                codePre.addClass(hiddenPreClass);  
                            }
                            labelSpan.click(function (e) {
                                var activeTab = scriptBlock.data(activeTabData);
                                $(labelElems[activeTab]).addClass(otherTabClass);   
                                $(pres[activeTab]).addClass(hiddenPreClass);   
                                        
                                codePre.removeClass(hiddenPreClass);    
                                labelSpan.removeClass(otherTabClass);
                                scriptBlock.data(activeTabData, index);

                                if( window.parent.Galleries ) {
                                    window.parent.Galleries.project.resizeDesc();
                                }
                            });
                        });

                        var preview = scriptBlock.find('div.preview');
                        if (preview.length == 0) {
                            preview = $(pres[pres.length - 1]);
                        }
                        preview.remove();

                        if (window.clipboardData && clipboardData.setData) {
                            var copyLink = $("<a href='#' class='copyCode'>Kopiuj kod</a>");
                            copyLink.click(function (e) {
                                trackCodeSnippetCodeDownload();
                                clipboardData.setData("Text", $(labelElems[scriptBlock.data(activeTabData)]).data('code'));
                                return false;
                            });
                            $(this).prepend(copyLink);
                        }
                    }
                });

                if ((window.parent) && (window.parent.Galleries)) {
                    window.parent.Galleries.project.resizeDesc();
                }

                    if (top.location == self.location) {
                         window.location.replace(window.location.href.replace('/description', ''));
                    }
            }

            function trackCodeSnippetCodeDownload() {
                if ((window.parent) && (window.parent.gTracker)) {
                    window.parent.gTracker.createActionEvent('Description', 'Download', 'Copy', 'CodeSnippet', null);
                }
            }
            
            function overrideAnchorLinksForFirefoxAndChrome(iframeId) {
                if(($.browser.mozilla && parseInt($.browser.version, 10) >= 2) || $.browser.webkit) {
                    var iframeOffset = $("#" + iframeId, window.parent.document).offset();
                    $("a").each(function () {
                        var link = $(this);
                        var href = link.attr("href");
                        if (href && href[0] == "#") {
                            var name = href.substring(1);
                            $(this).click(function () {
                                var nameElement = $("[name='" + name + "']");
                                var idElement = $("#" + name);
                                var element = null;
                                if (nameElement.length > 0) {
                                    element = nameElement;
                                } else if (idElement.length > 0) {
                                    element = idElement;
                                }

                                if (element) {
                                    var offset = element.offset();
                                    window.parent.scrollTo(offset.left, offset.top + iframeOffset.top);
                                }

                                return false;
                            });
                        }
                    });
                }
            }

            $(window).load(function(){
                initializePage();
                overrideAnchorLinksForFirefoxAndChrome("longdescIframe");

            });

        </script>
                <style type="text/css">
                    body { 
                        font-family: 'Segoe UI','Lucida Grande',Verdana,Arial,Helvetica,sans-serif;
                    }
                </style>
        <!-- base href="http://code.msdn.microsoft.com/Webcam-Capture-50295c7f/description" -->
    <style type="text/css">/* Chili -- cs */
.cs__mlcom { color: green; }
.cs__com { color: green; }
.cs__string { color: maroon; }
.cs__preproc { color: gray;;font-weight: bold; }
.cs__number { color: red; }
.cs__keyword { color: #3A3AFF; font-weight: bold; }</style></head>
    <body>
        <div id="longDesc">
            
<h2>Introduction</h2>
<p>For a long time, I have been looking for a good way to capture images
 without too much trouble. All you need to do is call one method to get 
the image.</p>
<p>I have used Windows Image Acquisition (WIA) to capture images. WIA 
provides a great deal of compatibility with webcams already running on 
Microsoft Windows XP.</p>
<p>This is my first posting on The Code Project, please do not hesitate 
to comment or give any suggestions. I would be very thankful if you 
provide any feedback.</p>
<h2>Improved Image Capture Technologies: WIA</h2>
<p>Windows XP supports still-image devices through Windows Image 
Acquisition (WIA), which uses the Windows Driver Model (WDM) 
architecture. WIA provides robust communication between applications and
 image-capture devices, allowing you to capture images efficiently
 and transfer them to your computer for editing and use.</p>
<p>WIA supports small computer system interface (SCSI), IEEE 1394, USB, 
and serial digital still image devices. Support for infrared, parallel, 
and serial still-image devices—which are connected to standard COM 
ports—comes from the existing infrared,
 parallel, and serial interfaces. Image scanners and digital cameras are
 examples of still image devices. WIA also supports Microsoft 
DirectShow®-based webcams and digital video (DV) camcorders to capture 
frames from video.</p>
<h3>Windows Image Acquisition Architecture</h3>
<p>WIA architecture is both an Application Programming Interface (API) 
and a Device Driver Interface (DDI). The WIA architecture includes 
components provided by the software and hardware vendor, as well as by 
Microsoft. Figure 1 below illustrates the WIA architecture.</p>
<p>&nbsp;</p>
<p><img src="description_data/hwspxp01.gif" alt="Figure 1: The components of WIA architecture." border="0" height="418" width="335"></p>
<h2>The DLL Fix</h2>
<p>I have included all the required references in the source code. You 
don't need to do this, but if you wish to know how you may read this 
section.</p>
<p><img src="description_data/reference.JPG" alt="Reference" border="0" height="346" hspace="0" width="640"></p>
<p>You want to add a reference to Microsoft Windows Image Acquisition type library.</p>
<p><img src="description_data/reference2.JPG" alt="Reference2" border="0" height="342" hspace="0" width="640"></p>
<p>You also want to add a reference to WiaVideo Type Library. However, 
after some trouble I read about a bug and its fix that occurs while 
importing the type library.</p>
<p>Use ILDASM to dump the type library&nbsp;<em>Interop.WIAVIDEOLib.dll</em>, then use Notepad to replace occurrences of<code>valuetype _RemotableHandle&amp;</code>&nbsp;to&nbsp;<code>native int</code>. Then compile the iL dump file you fixed using&nbsp;<code>ILASM&nbsp;</code>in
 the CMD&nbsp;<code>ilasm /DLL WIAVIDEOLib.il</code>. Add a reference to the new DLL and you are set to go.</p>
<p>&nbsp;</p>
<p><a href="http://www.codeproject.com/Articles/15219/WebCam-Fast-Image-Capture-Service-using-WIA">http://www.codeproject.com/Articles/15219/WebCam-Fast-Image-Capture-Service-using-WIA</a></p>
<p><a href="http://blog.marcio-pulcinelli.com/2011/06/05/acessando-webcam-com-c/">http://blog.marcio-pulcinelli.com/2011/06/05/acessando-webcam-com-c/</a></p>
<p>&nbsp;</p>
<div class="scriptcode">
<div class="pluginEditHolder" plugincommand="mceScriptCode">
<div class="title"><span>C#</span></div>
<div class="pluginLinkHolder"><span class="pluginEditHolderLink">Editar Script</span>|<span class="pluginRemoveHolderLink">Remove</span></div>

<pre class="csharp"><span class="cs__preproc">#region&nbsp;API&nbsp;Declarations</span>&nbsp;
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="cs__com">//Abaixo&nbsp;tremos&nbsp;todas&nbsp;as&nbsp;chamadas&nbsp;das&nbsp;APIs&nbsp;do&nbsp;Sistema&nbsp;Operacional&nbsp;Windows.</span>&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="cs__com">//Essas&nbsp;chamadas&nbsp;fazem&nbsp;a&nbsp;interface&nbsp;do&nbsp;nosso&nbsp;controle&nbsp;com&nbsp;a&nbsp;WebCam&nbsp;e&nbsp;com&nbsp;o&nbsp;SO.</span>&nbsp;
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="cs__com">//Esta&nbsp;chamada&nbsp;é&nbsp;uma&nbsp;das&nbsp;mais&nbsp;importantes&nbsp;e&nbsp;é&nbsp;vital&nbsp;para&nbsp;o&nbsp;funcionamento&nbsp;do&nbsp;SO.&nbsp;</span>&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[DllImport(<span class="cs__string">"user32"</span>,&nbsp;EntryPoint&nbsp;=&nbsp;<span class="cs__string">"SendMessage"</span>)]&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="cs__keyword">public</span>&nbsp;<span class="cs__keyword">static</span>&nbsp;<span class="cs__keyword">extern</span>&nbsp;<span class="cs__keyword">int</span>&nbsp;SendMessage(<span class="cs__keyword">int</span>&nbsp;hWnd,&nbsp;<span class="cs__keyword">uint</span>&nbsp;Msg,&nbsp;<span class="cs__keyword">int</span>&nbsp;wParam,&nbsp;<span class="cs__keyword">int</span>&nbsp;lParam);&nbsp;
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="cs__com">//Esta&nbsp;API&nbsp;cria&nbsp;a&nbsp;instância&nbsp;da&nbsp;webcam&nbsp;para&nbsp;que&nbsp;possamos&nbsp;acessa-la.</span>&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[DllImport(<span class="cs__string">"avicap32.dll"</span>,&nbsp;EntryPoint&nbsp;=&nbsp;<span class="cs__string">"capCreateCaptureWindowA"</span>)]&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="cs__keyword">public</span>&nbsp;<span class="cs__keyword">static</span>&nbsp;<span class="cs__keyword">extern</span>&nbsp;<span class="cs__keyword">int</span>&nbsp;capCreateCaptureWindowA(<span class="cs__keyword">string</span>&nbsp;lpszWindowName,&nbsp;<span class="cs__keyword">int</span>&nbsp;dwStyle,&nbsp;<span class="cs__keyword">int</span>&nbsp;x,&nbsp;<span class="cs__keyword">int</span>&nbsp;y,&nbsp;<span class="cs__keyword">int</span>&nbsp;nWidth,&nbsp;<span class="cs__keyword">int</span>&nbsp;nHeight,&nbsp;<span class="cs__keyword">int</span>&nbsp;hwndParent,&nbsp;<span class="cs__keyword">int</span>&nbsp;nID);&nbsp;
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="cs__com">//Esta&nbsp;API&nbsp;abre&nbsp;a&nbsp;área&nbsp;de&nbsp;tranferência&nbsp;para&nbsp;que&nbsp;possamos&nbsp;buscar&nbsp;os&nbsp;dados&nbsp;da&nbsp;webcam.</span>&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[DllImport(<span class="cs__string">"user32"</span>,&nbsp;EntryPoint&nbsp;=&nbsp;<span class="cs__string">"OpenClipboard"</span>)]&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="cs__keyword">public</span>&nbsp;<span class="cs__keyword">static</span>&nbsp;<span class="cs__keyword">extern</span>&nbsp;<span class="cs__keyword">int</span>&nbsp;OpenClipboard(<span class="cs__keyword">int</span>&nbsp;hWnd);&nbsp;
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="cs__com">//Esta&nbsp;API&nbsp;limpa&nbsp;a&nbsp;área&nbsp;de&nbsp;transferência.</span>&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[DllImport(<span class="cs__string">"user32"</span>,&nbsp;EntryPoint&nbsp;=&nbsp;<span class="cs__string">"EmptyClipboard"</span>)]&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="cs__keyword">public</span>&nbsp;<span class="cs__keyword">static</span>&nbsp;<span class="cs__keyword">extern</span>&nbsp;<span class="cs__keyword">int</span>&nbsp;EmptyClipboard();&nbsp;
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="cs__com">//Esta&nbsp;API&nbsp;fecha&nbsp;a&nbsp;área&nbsp;de&nbsp;tranferência&nbsp;após&nbsp;utilização.</span>&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[DllImport(<span class="cs__string">"user32"</span>,&nbsp;EntryPoint&nbsp;=&nbsp;<span class="cs__string">"CloseClipboard"</span>)]&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="cs__keyword">public</span>&nbsp;<span class="cs__keyword">static</span>&nbsp;<span class="cs__keyword">extern</span>&nbsp;<span class="cs__keyword">int</span>&nbsp;CloseClipboard();&nbsp;
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="cs__com">//Esta&nbsp;API&nbsp;recupera&nbsp;os&nbsp;dados&nbsp;da&nbsp;área&nbsp;de&nbsp;tranferência&nbsp;para&nbsp;a&nbsp;utilização.</span>&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[DllImport(<span class="cs__string">"user32.dll"</span>)]&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="cs__keyword">extern</span>&nbsp;<span class="cs__keyword">static</span>&nbsp;IntPtr&nbsp;GetClipboardData(<span class="cs__keyword">uint</span>&nbsp;uFormat);<span class="cs__preproc">&nbsp;
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#endregion</span><span class="cs__preproc">&nbsp;
&nbsp;
&nbsp;
&nbsp;#region&nbsp;API&nbsp;Constants</span>&nbsp;
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="cs__com">//Esas&nbsp;constantes&nbsp;são&nbsp;predefinidas&nbsp;pelo&nbsp;SO</span>&nbsp;
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="cs__keyword">public</span>&nbsp;<span class="cs__keyword">const</span>&nbsp;<span class="cs__keyword">int</span>&nbsp;WM_USER&nbsp;=&nbsp;<span class="cs__number">1024</span>;&nbsp;
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="cs__keyword">public</span>&nbsp;<span class="cs__keyword">const</span>&nbsp;<span class="cs__keyword">int</span>&nbsp;WM_CAP_CONNECT&nbsp;=&nbsp;<span class="cs__number">1034</span>;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="cs__keyword">public</span>&nbsp;<span class="cs__keyword">const</span>&nbsp;<span class="cs__keyword">int</span>&nbsp;WM_CAP_DISCONNECT&nbsp;=&nbsp;<span class="cs__number">1035</span>;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="cs__keyword">public</span>&nbsp;<span class="cs__keyword">const</span>&nbsp;<span class="cs__keyword">int</span>&nbsp;WM_CAP_GT_FRAME&nbsp;=&nbsp;<span class="cs__number">1084</span>;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="cs__keyword">public</span>&nbsp;<span class="cs__keyword">const</span>&nbsp;<span class="cs__keyword">int</span>&nbsp;WM_CAP_COPY&nbsp;=&nbsp;<span class="cs__number">1054</span>;&nbsp;
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="cs__keyword">public</span>&nbsp;<span class="cs__keyword">const</span>&nbsp;<span class="cs__keyword">int</span>&nbsp;WM_CAP_START&nbsp;=&nbsp;WM_USER;&nbsp;
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="cs__keyword">public</span>&nbsp;<span class="cs__keyword">const</span>&nbsp;<span class="cs__keyword">int</span>&nbsp;WM_CAP_DLG_VIDEOFORMAT&nbsp;=&nbsp;WM_CAP_START&nbsp;+&nbsp;<span class="cs__number">41</span>;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="cs__keyword">public</span>&nbsp;<span class="cs__keyword">const</span>&nbsp;<span class="cs__keyword">int</span>&nbsp;WM_CAP_DLG_VIDEOSOURCE&nbsp;=&nbsp;WM_CAP_START&nbsp;+&nbsp;<span class="cs__number">42</span>;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="cs__keyword">public</span>&nbsp;<span class="cs__keyword">const</span>&nbsp;<span class="cs__keyword">int</span>&nbsp;WM_CAP_DLG_VIDEODISPLAY&nbsp;=&nbsp;WM_CAP_START&nbsp;+&nbsp;<span class="cs__number">43</span>;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="cs__keyword">public</span>&nbsp;<span class="cs__keyword">const</span>&nbsp;<span class="cs__keyword">int</span>&nbsp;WM_CAP_GET_VIDEOFORMAT&nbsp;=&nbsp;WM_CAP_START&nbsp;+&nbsp;<span class="cs__number">44</span>;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="cs__keyword">public</span>&nbsp;<span class="cs__keyword">const</span>&nbsp;<span class="cs__keyword">int</span>&nbsp;WM_CAP_SET_VIDEOFORMAT&nbsp;=&nbsp;WM_CAP_START&nbsp;+&nbsp;<span class="cs__number">45</span>;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="cs__keyword">public</span>&nbsp;<span class="cs__keyword">const</span>&nbsp;<span class="cs__keyword">int</span>&nbsp;WM_CAP_DLG_VIDEOCOMPRESSION&nbsp;=&nbsp;WM_CAP_START&nbsp;+&nbsp;<span class="cs__number">46</span>;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="cs__keyword">public</span>&nbsp;<span class="cs__keyword">const</span>&nbsp;<span class="cs__keyword">int</span>&nbsp;WM_CAP_SET_PREVIEW&nbsp;=&nbsp;WM_CAP_START&nbsp;+&nbsp;<span class="cs__number">50</span>;<span class="cs__preproc">&nbsp;
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#endregion</span></pre>

</div>
</div>

        </div>
    
</body></html>